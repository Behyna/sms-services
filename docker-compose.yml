services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 3
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: adminpassword
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
      - "15692:15692" # Prometheus metrics
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    #      - ./paymentgateway/monitoring/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - monitoring
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  paymentgateway:
    build:
      context: ./paymentgateway
      dockerfile: Dockerfile
    container_name: paymentgateway
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PASSWORD=rootpassword
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  smsgateway-api:
    build:
      context: ./smsgateway
      dockerfile: Dockerfile
      args:
        SERVICE: api
    container_name: smsgateway-api
#    image: smsgateway-api:latest
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      paymentgateway:
        condition: service_healthy
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PASSWORD=rootpassword
      - RABBITMQ_URL=amqp://admin:adminpassword@rabbitmq:5672/
      - PAYMENT_GATEWAY_BASE_URL=http://paymentgateway:8082/api/v1
    networks:
      - monitoring
    restart: unless-stopped

  smsgateway-worker-send:
    build:
      context: ./smsgateway
      dockerfile: Dockerfile
      args:
        SERVICE: worker-send
    container_name: smsgateway-worker-send
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      paymentgateway:
        condition: service_healthy
      smsgateway-api:
        condition: service_started
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PASSWORD=rootpassword
      - RABBITMQ_URL=amqp://admin:adminpassword@rabbitmq:5672/
      - PAYMENT_GATEWAY_BASE_URL=http://paymentgateway:8082/api/v1
    networks:
      - monitoring
    restart: unless-stopped

  smsgateway-worker-send-publisher:
    build:
      context: ./smsgateway
      dockerfile: Dockerfile
      args:
        SERVICE: worker-send-publisher
    container_name: smsgateway-worker-send-publisher
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PASSWORD=rootpassword
      - RABBITMQ_URL=amqp://admin:adminpassword@rabbitmq:5672/
    networks:
      - monitoring
    restart: unless-stopped

  smsgateway-worker-refund:
    build:
      context: ./smsgateway
      dockerfile: Dockerfile
      args:
        SERVICE: worker-refund
    container_name: smsgateway-worker-refund
#    image: smsgateway-worker-refund:latest
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      paymentgateway:
        condition: service_healthy
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PASSWORD=rootpassword
      - RABBITMQ_URL=amqp://admin:adminpassword@rabbitmq:5672/
      - PAYMENT_GATEWAY_BASE_URL=http://paymentgateway:8082/api/v1
    networks:
      - monitoring
    restart: unless-stopped

  smsgateway-worker-refund-publisher:
    build:
      context: ./smsgateway
      dockerfile: Dockerfile
      args:
        SERVICE: worker-refund-publisher
    container_name: smsgateway-worker-refund-publisher
#    image: smsgateway-worker-refund-publisher:latest
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PASSWORD=rootpassword
      - RABBITMQ_URL=amqp://admin:adminpassword@rabbitmq:5672/
    networks:
      - monitoring
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./paymentgateway/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./paymentgateway/monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    networks:
      - monitoring
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.wal-compression'
    depends_on:
      # - paymentgateway
      - node-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./paymentgateway/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./paymentgateway/monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge
    name: monitoring-network

volumes:
  mysql_data:
    name: mysql_data
  rabbitmq_data:
    name: rabbitmq_data
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data
  alertmanager_data:
    name: alertmanager_data